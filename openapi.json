{
    "components": {
      "schemas": {
        "Requirement": {
          "properties": {
            "conditions": {
              "items": {
                "$ref": "#/components/schemas/RequirementCondition"
              },
              "title": "Conditions",
              "type": "array"
            },
            "link": {
              "title": "Link",
              "type": "string"
            },
            "type": {
              "title": "Type",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "Requirement",
          "type": "object"
        },
        "RequirementCondition": {
          "properties": {
            "has_fulfilled": {
              "items": {
                "type": "integer"
              },
              "title": "Has Fulfilled",
              "type": "array"
            },
            "req_text": {
              "title": "Req Text",
              "type": "string"
            },
            "type": {
              "title": "Type",
              "type": "string"
            },
            "value": {
              "title": "Value"
            }
          },
          "required": [
            "type"
          ],
          "title": "RequirementCondition",
          "type": "object"
        }
      }
    },
    "info": {
      "title": "DRIP API",
      "version": "0.1.0"
    },
    "openapi": "3.0.3",
    "paths": {
      "/api/v4/health/api": {
        "get": {
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "default": "Ok",
                        "title": "Message",
                        "type": "string"
                      }
                    },
                    "title": "SuccessResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "error": {
                        "default": "Bad Request",
                        "title": "Error",
                        "type": "string"
                      }
                    },
                    "title": "ErrorResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "A simple endpoint to check the health of the service.",
          "tags": [
            "Health"
          ]
        }
      },
      "/api/v4/health/bot": {
        "get": {
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "default": "Ok",
                        "title": "Message",
                        "type": "string"
                      }
                    },
                    "title": "SuccessResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "error": {
                        "default": "Bad Request",
                        "title": "Error",
                        "type": "string"
                      }
                    },
                    "title": "ErrorResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "A simple endpoint to check the health of the main bot.",
          "tags": [
            "Health"
          ]
        }
      },
      "/api/v4/health/redis": {
        "get": {
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "default": "Ok",
                        "title": "Message",
                        "type": "string"
                      }
                    },
                    "title": "SuccessResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "error": {
                        "default": "Bad Request",
                        "title": "Error",
                        "type": "string"
                      }
                    },
                    "title": "ErrorResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "A simple endpoint to check the health of the redis service.",
          "tags": [
            "Health"
          ]
        }
      },
      "/api/v4/health/wallet-connect": {
        "get": {
          "description": "",
          "parameters": [],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "default": "Ok",
                        "title": "Message",
                        "type": "string"
                      }
                    },
                    "title": "SuccessResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "error": {
                        "default": "Bad Request",
                        "title": "Error",
                        "type": "string"
                      }
                    },
                    "title": "ErrorResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "A simple endpoint to check the health of the wallet-connect service.",
          "tags": [
            "Health"
          ]
        }
      },
      "/api/v4/health/whitelabels": {
        "get": {
          "description": "Returns 200 if all services are running, 400 if any are down.",
          "parameters": [],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "default": "Ok",
                        "title": "Message",
                        "type": "string"
                      }
                    },
                    "title": "SuccessResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "error": {
                        "default": "Bad Request",
                        "title": "Error",
                        "type": "string"
                      }
                    },
                    "title": "ErrorResponseModel",
                    "type": "object"
                  }
                }
              },
              "description": ""
            }
          },
          "summary": "Health check endpoint for whitelabel services.",
          "tags": [
            "Health"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/auto": {
        "delete": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "x_id": {
                      "title": "X Id",
                      "type": "string"
                    }
                  },
                  "required": [
                    "x_id"
                  ],
                  "title": "DeleteAutoQuestRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Deletes an auto-quest for the realm",
          "tags": [
            "Quests"
          ]
        },
        "post": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "x_name": {
                      "title": "X Name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "x_name"
                  ],
                  "title": "CreateAutoQuestRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Creates an auto-quest for the realm",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/members/{member_id}/quests": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "member_id",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Fetches all quests for a member",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/members/{member_id}/quests/{quest_id}/fulfillment": {
        "post": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "member_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "quest_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "QuestFulfillmentRequestPublic(post_id: Optional[str] = None)",
                  "properties": {
                    "post_id": {
                      "title": "Post Id",
                      "type": "string"
                    }
                  },
                  "title": "QuestFulfillmentRequestPublic",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Fulfills a quest for a user",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/members/{twitter_id}/quests/{quest_id}/status": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "twitter_id",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "in": "path",
              "name": "quest_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Check if a user has fulfilled the quest",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/quests": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Fetches all available quests for a realm",
          "tags": [
            "Quests"
          ]
        },
        "post": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "channel_id": {
                      "title": "Channel Id",
                      "type": "integer"
                    },
                    "claim_amount": {
                      "title": "Claim Amount",
                      "type": "integer"
                    },
                    "claim_interval": {
                      "default": 0,
                      "title": "Claim Interval",
                      "type": "integer"
                    },
                    "custom_data": {
                      "title": "Custom Data",
                      "type": "object"
                    },
                    "customization": {
                      "title": "Customization",
                      "type": "object"
                    },
                    "expires_at": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "title": "Expires At"
                    },
                    "guild_id": {
                      "title": "Guild Id",
                      "type": "integer"
                    },
                    "note": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "Note",
                      "type": "object"
                    },
                    "quest_id": {
                      "title": "Quest Id",
                      "type": "integer"
                    },
                    "required_role": {
                      "title": "Required Role",
                      "type": "string"
                    },
                    "requirements": {
                      "items": {
                        "$ref": "#/components/schemas/Requirement"
                      },
                      "title": "Requirements",
                      "type": "array"
                    },
                    "role_reward": {
                      "title": "Role Reward",
                      "type": "string"
                    },
                    "thread_id": {
                      "title": "Thread Id",
                      "type": "integer"
                    },
                    "total_amount": {
                      "title": "Total Amount",
                      "type": "integer"
                    },
                    "type": {
                      "title": "Type",
                      "type": "string"
                    },
                    "user_icon": {
                      "title": "User Icon",
                      "type": "string"
                    },
                    "user_id": {
                      "title": "User Id",
                      "type": "integer"
                    },
                    "user_name": {
                      "title": "User Name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "user_id",
                    "user_name",
                    "user_icon",
                    "guild_id",
                    "channel_id",
                    "type",
                    "total_amount",
                    "claim_amount",
                    "role_reward"
                  ],
                  "title": "QuestCreationRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Creates a new quest for the realm",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/quests/paginated": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Fetches paginated quests for a realm",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/quests/{quest_id}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "quest_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Fetches a quest by its ID",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/quests/{quest_id}/custom": {
        "patch": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "quest_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Updates the custom data for a quest",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/quests/{quest_id}/extend": {
        "patch": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "quest_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "new_expire_at": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "format": "date-time",
                          "type": "string"
                        }
                      ],
                      "title": "New Expire At"
                    }
                  },
                  "required": [
                    "new_expire_at"
                  ],
                  "title": "ExtendQuestRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Extends the expiration date of a quest if the total_amount is 0 and sets expired to false.",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/stats/{member_id}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "member_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Fetches the stats for a member",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{id}/twitter-members/{twitter_id}/quests/{quest_id}/fulfillment": {
        "post": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "twitter_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "quest_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "QuestFulfillmentRequestPublic(post_id: Optional[str] = None)",
                  "properties": {
                    "post_id": {
                      "title": "Post Id",
                      "type": "string"
                    }
                  },
                  "title": "QuestFulfillmentRequestPublic",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Fulfills a quest for a Twitter user. (Improved version of the status endpoint)",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/quests/realms/{realm_id}/quests/{quest_id}/expire": {
        "patch": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "realm_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "quest_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Manually expires a quest, causing the quest to be removed.",
          "tags": [
            "Quests"
          ]
        }
      },
      "/api/v4/realms/{id}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Returns information about a realm",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/analytics": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Returns analytics for a realm",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/export_logs": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/leaderboard": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Returns the leaderboard for a realm",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/leaderboard/{member_id}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "member_id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Returns the leaderboard position for a member",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/members/includes": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "wallets": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Wallets",
                      "type": "array"
                    }
                  },
                  "required": [
                    "wallets"
                  ],
                  "title": "RealmIsWalletIncluded",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Returns whether or not this wallet is inside the realm",
          "tags": [
            "Realm-Controller-WEB3"
          ]
        }
      },
      "/api/v4/realms/{id}/members/tokenBalance": {
        "patch": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "description": {
                      "title": "Description",
                      "type": "string"
                    },
                    "entries": {
                      "items": {
                        "type": "object"
                      },
                      "title": "Entries",
                      "type": "array"
                    }
                  },
                  "required": [
                    "description",
                    "entries"
                  ],
                  "title": "ExternalRealmMemberBalanceUpdate",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Updates members' token balances transactionally",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/members/{memberId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "memberId",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Returns a member's token balance and boost balance",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/members/{memberId}/tokenBalance": {
        "patch": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "memberId",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "realmPointId": {
                      "title": "Realmpointid",
                      "type": "string"
                    },
                    "tokens": {
                      "title": "Tokens",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tokens"
                  ],
                  "title": "RealmmemberInBalance",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Updates a member's token balance",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/members/{memberId}/transfer": {
        "patch": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "memberId",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "realmPointId": {
                      "title": "Realmpointid",
                      "type": "string"
                    },
                    "recipientId": {
                      "title": "Recipientid",
                      "type": "integer"
                    },
                    "tokens": {
                      "title": "Tokens",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tokens",
                    "recipientId"
                  ],
                  "title": "RealmmemberInTransfer",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Transfers tokens from one member to another",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/wallet_balances": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Get the token balances for a list of wallets",
          "tags": [
            "Realm-Controller"
          ]
        }
      },
      "/api/v4/realms/{id}/web3/collection/claim/all": {
        "patch": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "memberId": {
                      "title": "Memberid",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "memberId"
                  ],
                  "title": "RealmInHarvestAll",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Harvests all tokens",
          "tags": [
            "Realm-Controller-WEB3-Collection"
          ]
        }
      },
      "/api/v4/realms/{id}/web3/credit/nfts": {
        "patch": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "RealmMassCreditNFTs(amount: int, contractAddress: str, chain: str, tokenIds: List[int])",
                  "properties": {
                    "amount": {
                      "title": "Amount",
                      "type": "integer"
                    },
                    "chain": {
                      "title": "Chain",
                      "type": "string"
                    },
                    "contractAddress": {
                      "title": "Contractaddress",
                      "type": "string"
                    },
                    "tokenIds": {
                      "items": {
                        "type": "integer"
                      },
                      "title": "Tokenids",
                      "type": "array"
                    }
                  },
                  "required": [
                    "amount",
                    "contractAddress",
                    "chain",
                    "tokenIds"
                  ],
                  "title": "RealmMassCreditNFTs",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Credits NFTs",
          "tags": [
            "Realm-Controller-WEB3-Credit"
          ]
        }
      },
      "/api/v4/realms/{id}/web3/members/{memberId}": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "memberId",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
  
          },
          "summary": "Returns a member's collections with their token balances",
          "tags": [
            "Realm-Controller-WEB3-Collection"
          ]
        }
      },
      "/api/v4/realms/{id}/web3/nft": {
        "get": {
          "description": "",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "contractAddress": {
                      "title": "Contractaddress",
                      "type": "string"
                    },
                    "tokenId": {
                      "title": "Tokenid",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "contractAddress",
                    "tokenId"
                  ],
                  "title": "FetchNFTBalance",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "summary": "Gets the NFT balance from a realm",
          "tags": [
            "Realm-Controller-WEB3-Settings-NFT"
          ]
        }
      },
      "/api/v4/realms/{id}/web3/wallet_balance": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "chain_type": {
                      "enum": [
                        "evm",
                        "solana"
                      ],
                      "title": "Chain Type",
                      "type": "string"
                    },
                    "wallet_address": {
                      "title": "Wallet Address",
                      "type": "string"
                    }
                  },
                  "required": [
                    "chain_type",
                    "wallet_address"
                  ],
                  "title": "RealmGetWalletBalance",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
  
          },
          "tags": [
            "Realm-Controller-WEB3"
          ]
        }
      }
    }
  }